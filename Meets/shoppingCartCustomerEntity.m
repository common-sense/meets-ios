//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shoppingCartCustomerEntity.h" 


@implementation shoppingCartCustomerEntity

- (id)initWithArray:(NSArray *)array
{
    if (self = [super init])
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"mode"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setMode:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_idSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"email"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setEmail:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"firstname"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setFirstname:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"lastname"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setLastname:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"password"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setPassword:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"confirmation"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setConfirmation:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"website_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWebsite_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"website_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWebsite_idSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setStore_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setStore_idSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"group_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setGroup_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"group_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setGroup_idSpecified:[nodeContentValue boolValue]];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shoppingCartCustomerEntity>" ];
    if (self.mode != nil)
    {
        [nsString appendFormat:@"<mode>%@</mode>" , [self mode]];
    }
    [nsString appendFormat:@"<customer_id>%d</customer_id>" , [self customer_id]];
    [nsString appendFormat:@"<customer_idSpecified>%d</customer_idSpecified>" , [self customer_idSpecified]];
    if (self.email != nil)
    {
        [nsString appendFormat:@"<email>%@</email>" , [self email]];
    }
    if (self.firstname != nil)
    {
        [nsString appendFormat:@"<firstname>%@</firstname>" , [self firstname]];
    }
    if (self.lastname != nil)
    {
        [nsString appendFormat:@"<lastname>%@</lastname>" , [self lastname]];
    }
    if (self.password != nil)
    {
        [nsString appendFormat:@"<password>%@</password>" , [self password]];
    }
    if (self.confirmation != nil)
    {
        [nsString appendFormat:@"<confirmation>%@</confirmation>" , [self confirmation]];
    }
    
    // Aristo:
    if (self.taxvat != nil)
    {
        [nsString appendFormat:@"<taxvat>%@</taxvat>" , [self taxvat]];
    }
    
    [nsString appendFormat:@"<website_id>%d</website_id>" , [self website_id]];
    [nsString appendFormat:@"<website_idSpecified>%d</website_idSpecified>" , [self website_idSpecified]];
    [nsString appendFormat:@"<store_id>%d</store_id>" , [self store_id]];
    [nsString appendFormat:@"<store_idSpecified>%d</store_idSpecified>" , [self store_idSpecified]];
    [nsString appendFormat:@"<group_id>%d</group_id>" , [self group_id]];
    [nsString appendFormat:@"<group_idSpecified>%d</group_idSpecified>" , [self group_idSpecified]];
    if (addNameWrap == YES)
        [nsString appendString:@"</shoppingCartCustomerEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super init])
    {
        self.mode = [decoder decodeObjectForKey:@"mode"];
        self.customer_id = [decoder decodeInt32ForKey:@"customer_id"];
        self.customer_idSpecified = [decoder decodeInt32ForKey:@"customer_idSpecified"];
        self.email = [decoder decodeObjectForKey:@"email"];
        self.firstname = [decoder decodeObjectForKey:@"firstname"];
        self.lastname = [decoder decodeObjectForKey:@"lastname"];
        self.password = [decoder decodeObjectForKey:@"password"];
        self.confirmation = [decoder decodeObjectForKey:@"confirmation"];
        self.website_id = [decoder decodeInt32ForKey:@"website_id"];
        self.website_idSpecified = [decoder decodeInt32ForKey:@"website_idSpecified"];
        self.store_id = [decoder decodeInt32ForKey:@"store_id"];
        self.store_idSpecified = [decoder decodeInt32ForKey:@"store_idSpecified"];
        self.group_id = [decoder decodeInt32ForKey:@"group_id"];
        self.group_idSpecified = [decoder decodeInt32ForKey:@"group_idSpecified"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.mode forKey:@"mode"];
    [encoder encodeInt32:self.customer_id forKey:@"customer_id"];
    [encoder encodeInt32:self.customer_idSpecified forKey:@"customer_idSpecified"];
    [encoder encodeObject:self.email forKey:@"email"];
    [encoder encodeObject:self.firstname forKey:@"firstname"];
    [encoder encodeObject:self.lastname forKey:@"lastname"];
    [encoder encodeObject:self.password forKey:@"password"];
    [encoder encodeObject:self.confirmation forKey:@"confirmation"];
    [encoder encodeInt32:self.website_id forKey:@"website_id"];
    [encoder encodeInt32:self.website_idSpecified forKey:@"website_idSpecified"];
    [encoder encodeInt32:self.store_id forKey:@"store_id"];
    [encoder encodeInt32:self.store_idSpecified forKey:@"store_idSpecified"];
    [encoder encodeInt32:self.group_id forKey:@"group_id"];
    [encoder encodeInt32:self.group_idSpecified forKey:@"group_idSpecified"];
}


- (id)copyWithZone:(NSZone *)zone
{
    shoppingCartCustomerEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.mode copy];
    finalCopy.mode = copy1;
    
    finalCopy.customer_id = self.customer_id;
    
    finalCopy.customer_idSpecified = self.customer_idSpecified;
    
    NSString *copy4 = [self.email copy];
    finalCopy.email = copy4;
    
    NSString *copy5 = [self.firstname copy];
    finalCopy.firstname = copy5;
    
    NSString *copy6 = [self.lastname copy];
    finalCopy.lastname = copy6;
    
    NSString *copy7 = [self.password copy];
    finalCopy.password = copy7;
    
    NSString *copy8 = [self.confirmation copy];
    finalCopy.confirmation = copy8;
    
    finalCopy.website_id = self.website_id;
    
    finalCopy.website_idSpecified = self.website_idSpecified;
    
    finalCopy.store_id = self.store_id;
    
    finalCopy.store_idSpecified = self.store_idSpecified;
    
    finalCopy.group_id = self.group_id;
    
    finalCopy.group_idSpecified = self.group_idSpecified;
    
    return finalCopy;
}

@end
