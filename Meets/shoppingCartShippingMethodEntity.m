//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shoppingCartShippingMethodEntity.h" 


@implementation shoppingCartShippingMethodEntity

- (id)initWithArray:(NSArray *)array
{
    if (self = [super init])
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCode:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"carrier"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCarrier:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"carrier_title"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCarrier_title:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"method"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setMethod:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"method_title"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setMethod_title:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"method_description"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setMethod_description:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"price"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPrice:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"priceSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPriceSpecified:[nodeContentValue boolValue]];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shoppingCartShippingMethodEntity>" ];
    if (self.code != nil)
    {
        [nsString appendFormat:@"<code>%@</code>" , [self code]];
    }
    if (self.carrier != nil)
    {
        [nsString appendFormat:@"<carrier>%@</carrier>" , [self carrier]];
    }
    if (self.carrier_title != nil)
    {
        [nsString appendFormat:@"<carrier_title>%@</carrier_title>" , [self carrier_title]];
    }
    if (self.method != nil)
    {
        [nsString appendFormat:@"<method>%@</method>" , [self method]];
    }
    if (self.method_title != nil)
    {
        [nsString appendFormat:@"<method_title>%@</method_title>" , [self method_title]];
    }
    if (self.method_description != nil)
    {
        [nsString appendFormat:@"<method_description>%@</method_description>" , [self method_description]];
    }
    [nsString appendFormat:@"<price>%lf</price>" , [self price]];
    [nsString appendFormat:@"<priceSpecified>%d</priceSpecified>" , [self priceSpecified]];
    if (addNameWrap == YES)
        [nsString appendString:@"</shoppingCartShippingMethodEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super init])
    {
        self.code = [decoder decodeObjectForKey:@"code"];
        self.carrier = [decoder decodeObjectForKey:@"carrier"];
        self.carrier_title = [decoder decodeObjectForKey:@"carrier_title"];
        self.method = [decoder decodeObjectForKey:@"method"];
        self.method_title = [decoder decodeObjectForKey:@"method_title"];
        self.method_description = [decoder decodeObjectForKey:@"method_description"];
        self.price = [decoder decodeInt32ForKey:@"price"];
        self.priceSpecified = [decoder decodeInt32ForKey:@"priceSpecified"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.code forKey:@"code"];
    [encoder encodeObject:self.carrier forKey:@"carrier"];
    [encoder encodeObject:self.carrier_title forKey:@"carrier_title"];
    [encoder encodeObject:self.method forKey:@"method"];
    [encoder encodeObject:self.method_title forKey:@"method_title"];
    [encoder encodeObject:self.method_description forKey:@"method_description"];
    [encoder encodeInt32:self.price forKey:@"price"];
    [encoder encodeInt32:self.priceSpecified forKey:@"priceSpecified"];
}


- (id)copyWithZone:(NSZone *)zone
{
    shoppingCartShippingMethodEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.code copy];
    finalCopy.code = copy1;
    
    NSString *copy2 = [self.carrier copy];
    finalCopy.carrier = copy2;
    
    NSString *copy3 = [self.carrier_title copy];
    finalCopy.carrier_title = copy3;
    
    NSString *copy4 = [self.method copy];
    finalCopy.method = copy4;
    
    NSString *copy5 = [self.method_title copy];
    finalCopy.method_title = copy5;
    
    NSString *copy6 = [self.method_description copy];
    finalCopy.method_description = copy6;
    
    finalCopy.price = self.price;
    
    finalCopy.priceSpecified = self.priceSpecified;
    
    return finalCopy;
}

@end
