//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shoppingCartItemEntity.h" 


@implementation shoppingCartItemEntity

- (id)initWithArray:(NSArray *)array
{
    if (self = [super init])
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"item_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setItem_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"created_at"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCreated_at:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"updated_at"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUpdated_at:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"product_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setProduct_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setStore_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"parent_item_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setParent_item_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_virtual"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_virtual:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_virtualSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_virtualSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"sku"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setSku:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"name"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"description"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setDescription:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"applied_rule_ids"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setApplied_rule_ids:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"additional_data"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setAdditional_data:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"free_shipping"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setFree_shipping:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_qty_decimal"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setIs_qty_decimal:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"no_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setNo_discount:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weight"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeight:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weightSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeightSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"qty"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setQty:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"qtySpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setQtySpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"price"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPrice:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"priceSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPriceSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_price"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_price:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_priceSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_priceSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"custom_price"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustom_price:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"custom_priceSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustom_priceSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"discount_percent"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setDiscount_percent:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"discount_percentSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setDiscount_percentSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"discount_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setDiscount_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"discount_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setDiscount_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_discount_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_discount_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_discount_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_discount_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_percent"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_percent:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_percentSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_percentSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_tax_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_tax_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_tax_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_tax_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_total"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_total:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_totalSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_totalSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_row_total"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_row_total:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_row_totalSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_row_totalSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_total_with_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_total_with_discount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_total_with_discountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_total_with_discountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_weight"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_weight:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_weightSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_weightSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"product_type"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setProduct_type:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_tax_before_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_tax_before_discount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_tax_before_discountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_tax_before_discountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_before_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_before_discount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_before_discountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setTax_before_discountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"original_custom_price"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setOriginal_custom_price:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"original_custom_priceSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setOriginal_custom_priceSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_cost"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_cost:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_costSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_costSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"price_incl_tax"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPrice_incl_tax:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"price_incl_taxSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setPrice_incl_taxSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_price_incl_tax"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_price_incl_tax:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_price_incl_taxSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_price_incl_taxSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_total_incl_tax"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_total_incl_tax:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"row_total_incl_taxSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setRow_total_incl_taxSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_row_total_incl_tax"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_row_total_incl_tax:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_row_total_incl_taxSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_row_total_incl_taxSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_message_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_message_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_message"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_message:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_message_available"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_message_available:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_applied"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_applied:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_appliedSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_appliedSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_applied_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_applied_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_applied_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_applied_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_applied_row_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_applied_row_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_applied_row_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_applied_row_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_applied_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_applied_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_applied_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_applied_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_applied_row_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_applied_row_amount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_applied_row_amountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_applied_row_amountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_disposition"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_disposition:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_dispositionSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_dispositionSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_row_disposition"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_row_disposition:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"weee_tax_row_dispositionSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setWeee_tax_row_dispositionSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_disposition"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_disposition:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_dispositionSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_dispositionSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_row_disposition"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_row_disposition:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_weee_tax_row_dispositionSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_weee_tax_row_dispositionSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"tax_class_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setTax_class_id:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shoppingCartItemEntity>" ];
    if (self.item_id != nil)
    {
        [nsString appendFormat:@"<item_id>%@</item_id>" , [self item_id]];
    }
    if (self.created_at != nil)
    {
        [nsString appendFormat:@"<created_at>%@</created_at>" , [self created_at]];
    }
    if (self.updated_at != nil)
    {
        [nsString appendFormat:@"<updated_at>%@</updated_at>" , [self updated_at]];
    }
    if (self.product_id != nil)
    {
        [nsString appendFormat:@"<product_id>%@</product_id>" , [self product_id]];
    }
    if (self.store_id != nil)
    {
        [nsString appendFormat:@"<store_id>%@</store_id>" , [self store_id]];
    }
    if (self.parent_item_id != nil)
    {
        [nsString appendFormat:@"<parent_item_id>%@</parent_item_id>" , [self parent_item_id]];
    }
    [nsString appendFormat:@"<is_virtual>%d</is_virtual>" , [self is_virtual]];
    [nsString appendFormat:@"<is_virtualSpecified>%d</is_virtualSpecified>" , [self is_virtualSpecified]];
    if (self.sku != nil)
    {
        [nsString appendFormat:@"<sku>%@</sku>" , [self sku]];
    }
    if (self.name != nil)
    {
        [nsString appendFormat:@"<name>%@</name>" , [self name]];
    }
    if (self.description != nil)
    {
        [nsString appendFormat:@"<description>%@</description>" , [self description]];
    }
    if (self.applied_rule_ids != nil)
    {
        [nsString appendFormat:@"<applied_rule_ids>%@</applied_rule_ids>" , [self applied_rule_ids]];
    }
    if (self.additional_data != nil)
    {
        [nsString appendFormat:@"<additional_data>%@</additional_data>" , [self additional_data]];
    }
    if (self.free_shipping != nil)
    {
        [nsString appendFormat:@"<free_shipping>%@</free_shipping>" , [self free_shipping]];
    }
    if (self.is_qty_decimal != nil)
    {
        [nsString appendFormat:@"<is_qty_decimal>%@</is_qty_decimal>" , [self is_qty_decimal]];
    }
    if (self.no_discount != nil)
    {
        [nsString appendFormat:@"<no_discount>%@</no_discount>" , [self no_discount]];
    }
    [nsString appendFormat:@"<weight>%lf</weight>" , [self weight]];
    [nsString appendFormat:@"<weightSpecified>%d</weightSpecified>" , [self weightSpecified]];
    [nsString appendFormat:@"<qty>%lf</qty>" , [self qty]];
    [nsString appendFormat:@"<qtySpecified>%d</qtySpecified>" , [self qtySpecified]];
    [nsString appendFormat:@"<price>%lf</price>" , [self price]];
    [nsString appendFormat:@"<priceSpecified>%d</priceSpecified>" , [self priceSpecified]];
    [nsString appendFormat:@"<base_price>%lf</base_price>" , [self base_price]];
    [nsString appendFormat:@"<base_priceSpecified>%d</base_priceSpecified>" , [self base_priceSpecified]];
    [nsString appendFormat:@"<custom_price>%lf</custom_price>" , [self custom_price]];
    [nsString appendFormat:@"<custom_priceSpecified>%d</custom_priceSpecified>" , [self custom_priceSpecified]];
    [nsString appendFormat:@"<discount_percent>%lf</discount_percent>" , [self discount_percent]];
    [nsString appendFormat:@"<discount_percentSpecified>%d</discount_percentSpecified>" , [self discount_percentSpecified]];
    [nsString appendFormat:@"<discount_amount>%lf</discount_amount>" , [self discount_amount]];
    [nsString appendFormat:@"<discount_amountSpecified>%d</discount_amountSpecified>" , [self discount_amountSpecified]];
    [nsString appendFormat:@"<base_discount_amount>%lf</base_discount_amount>" , [self base_discount_amount]];
    [nsString appendFormat:@"<base_discount_amountSpecified>%d</base_discount_amountSpecified>" , [self base_discount_amountSpecified]];
    [nsString appendFormat:@"<tax_percent>%lf</tax_percent>" , [self tax_percent]];
    [nsString appendFormat:@"<tax_percentSpecified>%d</tax_percentSpecified>" , [self tax_percentSpecified]];
    [nsString appendFormat:@"<tax_amount>%lf</tax_amount>" , [self tax_amount]];
    [nsString appendFormat:@"<tax_amountSpecified>%d</tax_amountSpecified>" , [self tax_amountSpecified]];
    [nsString appendFormat:@"<base_tax_amount>%lf</base_tax_amount>" , [self base_tax_amount]];
    [nsString appendFormat:@"<base_tax_amountSpecified>%d</base_tax_amountSpecified>" , [self base_tax_amountSpecified]];
    [nsString appendFormat:@"<row_total>%lf</row_total>" , [self row_total]];
    [nsString appendFormat:@"<row_totalSpecified>%d</row_totalSpecified>" , [self row_totalSpecified]];
    [nsString appendFormat:@"<base_row_total>%lf</base_row_total>" , [self base_row_total]];
    [nsString appendFormat:@"<base_row_totalSpecified>%d</base_row_totalSpecified>" , [self base_row_totalSpecified]];
    [nsString appendFormat:@"<row_total_with_discount>%lf</row_total_with_discount>" , [self row_total_with_discount]];
    [nsString appendFormat:@"<row_total_with_discountSpecified>%d</row_total_with_discountSpecified>" , [self row_total_with_discountSpecified]];
    [nsString appendFormat:@"<row_weight>%lf</row_weight>" , [self row_weight]];
    [nsString appendFormat:@"<row_weightSpecified>%d</row_weightSpecified>" , [self row_weightSpecified]];
    if (self.product_type != nil)
    {
        [nsString appendFormat:@"<product_type>%@</product_type>" , [self product_type]];
    }
    [nsString appendFormat:@"<base_tax_before_discount>%lf</base_tax_before_discount>" , [self base_tax_before_discount]];
    [nsString appendFormat:@"<base_tax_before_discountSpecified>%d</base_tax_before_discountSpecified>" , [self base_tax_before_discountSpecified]];
    [nsString appendFormat:@"<tax_before_discount>%lf</tax_before_discount>" , [self tax_before_discount]];
    [nsString appendFormat:@"<tax_before_discountSpecified>%d</tax_before_discountSpecified>" , [self tax_before_discountSpecified]];
    [nsString appendFormat:@"<original_custom_price>%lf</original_custom_price>" , [self original_custom_price]];
    [nsString appendFormat:@"<original_custom_priceSpecified>%d</original_custom_priceSpecified>" , [self original_custom_priceSpecified]];
    [nsString appendFormat:@"<base_cost>%lf</base_cost>" , [self base_cost]];
    [nsString appendFormat:@"<base_costSpecified>%d</base_costSpecified>" , [self base_costSpecified]];
    [nsString appendFormat:@"<price_incl_tax>%lf</price_incl_tax>" , [self price_incl_tax]];
    [nsString appendFormat:@"<price_incl_taxSpecified>%d</price_incl_taxSpecified>" , [self price_incl_taxSpecified]];
    [nsString appendFormat:@"<base_price_incl_tax>%lf</base_price_incl_tax>" , [self base_price_incl_tax]];
    [nsString appendFormat:@"<base_price_incl_taxSpecified>%d</base_price_incl_taxSpecified>" , [self base_price_incl_taxSpecified]];
    [nsString appendFormat:@"<row_total_incl_tax>%lf</row_total_incl_tax>" , [self row_total_incl_tax]];
    [nsString appendFormat:@"<row_total_incl_taxSpecified>%d</row_total_incl_taxSpecified>" , [self row_total_incl_taxSpecified]];
    [nsString appendFormat:@"<base_row_total_incl_tax>%lf</base_row_total_incl_tax>" , [self base_row_total_incl_tax]];
    [nsString appendFormat:@"<base_row_total_incl_taxSpecified>%d</base_row_total_incl_taxSpecified>" , [self base_row_total_incl_taxSpecified]];
    if (self.gift_message_id != nil)
    {
        [nsString appendFormat:@"<gift_message_id>%@</gift_message_id>" , [self gift_message_id]];
    }
    if (self.gift_message != nil)
    {
        [nsString appendFormat:@"<gift_message>%@</gift_message>" , [self gift_message]];
    }
    if (self.gift_message_available != nil)
    {
        [nsString appendFormat:@"<gift_message_available>%@</gift_message_available>" , [self gift_message_available]];
    }
    [nsString appendFormat:@"<weee_tax_applied>%lf</weee_tax_applied>" , [self weee_tax_applied]];
    [nsString appendFormat:@"<weee_tax_appliedSpecified>%d</weee_tax_appliedSpecified>" , [self weee_tax_appliedSpecified]];
    [nsString appendFormat:@"<weee_tax_applied_amount>%lf</weee_tax_applied_amount>" , [self weee_tax_applied_amount]];
    [nsString appendFormat:@"<weee_tax_applied_amountSpecified>%d</weee_tax_applied_amountSpecified>" , [self weee_tax_applied_amountSpecified]];
    [nsString appendFormat:@"<weee_tax_applied_row_amount>%lf</weee_tax_applied_row_amount>" , [self weee_tax_applied_row_amount]];
    [nsString appendFormat:@"<weee_tax_applied_row_amountSpecified>%d</weee_tax_applied_row_amountSpecified>" , [self weee_tax_applied_row_amountSpecified]];
    [nsString appendFormat:@"<base_weee_tax_applied_amount>%lf</base_weee_tax_applied_amount>" , [self base_weee_tax_applied_amount]];
    [nsString appendFormat:@"<base_weee_tax_applied_amountSpecified>%d</base_weee_tax_applied_amountSpecified>" , [self base_weee_tax_applied_amountSpecified]];
    [nsString appendFormat:@"<base_weee_tax_applied_row_amount>%lf</base_weee_tax_applied_row_amount>" , [self base_weee_tax_applied_row_amount]];
    [nsString appendFormat:@"<base_weee_tax_applied_row_amountSpecified>%d</base_weee_tax_applied_row_amountSpecified>" , [self base_weee_tax_applied_row_amountSpecified]];
    [nsString appendFormat:@"<weee_tax_disposition>%lf</weee_tax_disposition>" , [self weee_tax_disposition]];
    [nsString appendFormat:@"<weee_tax_dispositionSpecified>%d</weee_tax_dispositionSpecified>" , [self weee_tax_dispositionSpecified]];
    [nsString appendFormat:@"<weee_tax_row_disposition>%lf</weee_tax_row_disposition>" , [self weee_tax_row_disposition]];
    [nsString appendFormat:@"<weee_tax_row_dispositionSpecified>%d</weee_tax_row_dispositionSpecified>" , [self weee_tax_row_dispositionSpecified]];
    [nsString appendFormat:@"<base_weee_tax_disposition>%lf</base_weee_tax_disposition>" , [self base_weee_tax_disposition]];
    [nsString appendFormat:@"<base_weee_tax_dispositionSpecified>%d</base_weee_tax_dispositionSpecified>" , [self base_weee_tax_dispositionSpecified]];
    [nsString appendFormat:@"<base_weee_tax_row_disposition>%lf</base_weee_tax_row_disposition>" , [self base_weee_tax_row_disposition]];
    [nsString appendFormat:@"<base_weee_tax_row_dispositionSpecified>%d</base_weee_tax_row_dispositionSpecified>" , [self base_weee_tax_row_dispositionSpecified]];
    if (self.tax_class_id != nil)
    {
        [nsString appendFormat:@"<tax_class_id>%@</tax_class_id>" , [self tax_class_id]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</shoppingCartItemEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super init])
    {
        self.item_id = [decoder decodeObjectForKey:@"item_id"];
        self.created_at = [decoder decodeObjectForKey:@"created_at"];
        self.updated_at = [decoder decodeObjectForKey:@"updated_at"];
        self.product_id = [decoder decodeObjectForKey:@"product_id"];
        self.store_id = [decoder decodeObjectForKey:@"store_id"];
        self.parent_item_id = [decoder decodeObjectForKey:@"parent_item_id"];
        self.is_virtual = [decoder decodeInt32ForKey:@"is_virtual"];
        self.is_virtualSpecified = [decoder decodeInt32ForKey:@"is_virtualSpecified"];
        self.sku = [decoder decodeObjectForKey:@"sku"];
        self.name = [decoder decodeObjectForKey:@"name"];
        self.description = [decoder decodeObjectForKey:@"description"];
        self.applied_rule_ids = [decoder decodeObjectForKey:@"applied_rule_ids"];
        self.additional_data = [decoder decodeObjectForKey:@"additional_data"];
        self.free_shipping = [decoder decodeObjectForKey:@"free_shipping"];
        self.is_qty_decimal = [decoder decodeObjectForKey:@"is_qty_decimal"];
        self.no_discount = [decoder decodeObjectForKey:@"no_discount"];
        self.weight = [decoder decodeInt32ForKey:@"weight"];
        self.weightSpecified = [decoder decodeInt32ForKey:@"weightSpecified"];
        self.qty = [decoder decodeInt32ForKey:@"qty"];
        self.qtySpecified = [decoder decodeInt32ForKey:@"qtySpecified"];
        self.price = [decoder decodeInt32ForKey:@"price"];
        self.priceSpecified = [decoder decodeInt32ForKey:@"priceSpecified"];
        self.base_price = [decoder decodeInt32ForKey:@"base_price"];
        self.base_priceSpecified = [decoder decodeInt32ForKey:@"base_priceSpecified"];
        self.custom_price = [decoder decodeInt32ForKey:@"custom_price"];
        self.custom_priceSpecified = [decoder decodeInt32ForKey:@"custom_priceSpecified"];
        self.discount_percent = [decoder decodeInt32ForKey:@"discount_percent"];
        self.discount_percentSpecified = [decoder decodeInt32ForKey:@"discount_percentSpecified"];
        self.discount_amount = [decoder decodeInt32ForKey:@"discount_amount"];
        self.discount_amountSpecified = [decoder decodeInt32ForKey:@"discount_amountSpecified"];
        self.base_discount_amount = [decoder decodeInt32ForKey:@"base_discount_amount"];
        self.base_discount_amountSpecified = [decoder decodeInt32ForKey:@"base_discount_amountSpecified"];
        self.tax_percent = [decoder decodeInt32ForKey:@"tax_percent"];
        self.tax_percentSpecified = [decoder decodeInt32ForKey:@"tax_percentSpecified"];
        self.tax_amount = [decoder decodeInt32ForKey:@"tax_amount"];
        self.tax_amountSpecified = [decoder decodeInt32ForKey:@"tax_amountSpecified"];
        self.base_tax_amount = [decoder decodeInt32ForKey:@"base_tax_amount"];
        self.base_tax_amountSpecified = [decoder decodeInt32ForKey:@"base_tax_amountSpecified"];
        self.row_total = [decoder decodeInt32ForKey:@"row_total"];
        self.row_totalSpecified = [decoder decodeInt32ForKey:@"row_totalSpecified"];
        self.base_row_total = [decoder decodeInt32ForKey:@"base_row_total"];
        self.base_row_totalSpecified = [decoder decodeInt32ForKey:@"base_row_totalSpecified"];
        self.row_total_with_discount = [decoder decodeInt32ForKey:@"row_total_with_discount"];
        self.row_total_with_discountSpecified = [decoder decodeInt32ForKey:@"row_total_with_discountSpecified"];
        self.row_weight = [decoder decodeInt32ForKey:@"row_weight"];
        self.row_weightSpecified = [decoder decodeInt32ForKey:@"row_weightSpecified"];
        self.product_type = [decoder decodeObjectForKey:@"product_type"];
        self.base_tax_before_discount = [decoder decodeInt32ForKey:@"base_tax_before_discount"];
        self.base_tax_before_discountSpecified = [decoder decodeInt32ForKey:@"base_tax_before_discountSpecified"];
        self.tax_before_discount = [decoder decodeInt32ForKey:@"tax_before_discount"];
        self.tax_before_discountSpecified = [decoder decodeInt32ForKey:@"tax_before_discountSpecified"];
        self.original_custom_price = [decoder decodeInt32ForKey:@"original_custom_price"];
        self.original_custom_priceSpecified = [decoder decodeInt32ForKey:@"original_custom_priceSpecified"];
        self.base_cost = [decoder decodeInt32ForKey:@"base_cost"];
        self.base_costSpecified = [decoder decodeInt32ForKey:@"base_costSpecified"];
        self.price_incl_tax = [decoder decodeInt32ForKey:@"price_incl_tax"];
        self.price_incl_taxSpecified = [decoder decodeInt32ForKey:@"price_incl_taxSpecified"];
        self.base_price_incl_tax = [decoder decodeInt32ForKey:@"base_price_incl_tax"];
        self.base_price_incl_taxSpecified = [decoder decodeInt32ForKey:@"base_price_incl_taxSpecified"];
        self.row_total_incl_tax = [decoder decodeInt32ForKey:@"row_total_incl_tax"];
        self.row_total_incl_taxSpecified = [decoder decodeInt32ForKey:@"row_total_incl_taxSpecified"];
        self.base_row_total_incl_tax = [decoder decodeInt32ForKey:@"base_row_total_incl_tax"];
        self.base_row_total_incl_taxSpecified = [decoder decodeInt32ForKey:@"base_row_total_incl_taxSpecified"];
        self.gift_message_id = [decoder decodeObjectForKey:@"gift_message_id"];
        self.gift_message = [decoder decodeObjectForKey:@"gift_message"];
        self.gift_message_available = [decoder decodeObjectForKey:@"gift_message_available"];
        self.weee_tax_applied = [decoder decodeInt32ForKey:@"weee_tax_applied"];
        self.weee_tax_appliedSpecified = [decoder decodeInt32ForKey:@"weee_tax_appliedSpecified"];
        self.weee_tax_applied_amount = [decoder decodeInt32ForKey:@"weee_tax_applied_amount"];
        self.weee_tax_applied_amountSpecified = [decoder decodeInt32ForKey:@"weee_tax_applied_amountSpecified"];
        self.weee_tax_applied_row_amount = [decoder decodeInt32ForKey:@"weee_tax_applied_row_amount"];
        self.weee_tax_applied_row_amountSpecified = [decoder decodeInt32ForKey:@"weee_tax_applied_row_amountSpecified"];
        self.base_weee_tax_applied_amount = [decoder decodeInt32ForKey:@"base_weee_tax_applied_amount"];
        self.base_weee_tax_applied_amountSpecified = [decoder decodeInt32ForKey:@"base_weee_tax_applied_amountSpecified"];
        self.base_weee_tax_applied_row_amount = [decoder decodeInt32ForKey:@"base_weee_tax_applied_row_amount"];
        self.base_weee_tax_applied_row_amountSpecified = [decoder decodeInt32ForKey:@"base_weee_tax_applied_row_amountSpecified"];
        self.weee_tax_disposition = [decoder decodeInt32ForKey:@"weee_tax_disposition"];
        self.weee_tax_dispositionSpecified = [decoder decodeInt32ForKey:@"weee_tax_dispositionSpecified"];
        self.weee_tax_row_disposition = [decoder decodeInt32ForKey:@"weee_tax_row_disposition"];
        self.weee_tax_row_dispositionSpecified = [decoder decodeInt32ForKey:@"weee_tax_row_dispositionSpecified"];
        self.base_weee_tax_disposition = [decoder decodeInt32ForKey:@"base_weee_tax_disposition"];
        self.base_weee_tax_dispositionSpecified = [decoder decodeInt32ForKey:@"base_weee_tax_dispositionSpecified"];
        self.base_weee_tax_row_disposition = [decoder decodeInt32ForKey:@"base_weee_tax_row_disposition"];
        self.base_weee_tax_row_dispositionSpecified = [decoder decodeInt32ForKey:@"base_weee_tax_row_dispositionSpecified"];
        self.tax_class_id = [decoder decodeObjectForKey:@"tax_class_id"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.item_id forKey:@"item_id"];
    [encoder encodeObject:self.created_at forKey:@"created_at"];
    [encoder encodeObject:self.updated_at forKey:@"updated_at"];
    [encoder encodeObject:self.product_id forKey:@"product_id"];
    [encoder encodeObject:self.store_id forKey:@"store_id"];
    [encoder encodeObject:self.parent_item_id forKey:@"parent_item_id"];
    [encoder encodeInt32:self.is_virtual forKey:@"is_virtual"];
    [encoder encodeInt32:self.is_virtualSpecified forKey:@"is_virtualSpecified"];
    [encoder encodeObject:self.sku forKey:@"sku"];
    [encoder encodeObject:self.name forKey:@"name"];
    [encoder encodeObject:self.description forKey:@"description"];
    [encoder encodeObject:self.applied_rule_ids forKey:@"applied_rule_ids"];
    [encoder encodeObject:self.additional_data forKey:@"additional_data"];
    [encoder encodeObject:self.free_shipping forKey:@"free_shipping"];
    [encoder encodeObject:self.is_qty_decimal forKey:@"is_qty_decimal"];
    [encoder encodeObject:self.no_discount forKey:@"no_discount"];
    [encoder encodeInt32:self.weight forKey:@"weight"];
    [encoder encodeInt32:self.weightSpecified forKey:@"weightSpecified"];
    [encoder encodeInt32:self.qty forKey:@"qty"];
    [encoder encodeInt32:self.qtySpecified forKey:@"qtySpecified"];
    [encoder encodeInt32:self.price forKey:@"price"];
    [encoder encodeInt32:self.priceSpecified forKey:@"priceSpecified"];
    [encoder encodeInt32:self.base_price forKey:@"base_price"];
    [encoder encodeInt32:self.base_priceSpecified forKey:@"base_priceSpecified"];
    [encoder encodeInt32:self.custom_price forKey:@"custom_price"];
    [encoder encodeInt32:self.custom_priceSpecified forKey:@"custom_priceSpecified"];
    [encoder encodeInt32:self.discount_percent forKey:@"discount_percent"];
    [encoder encodeInt32:self.discount_percentSpecified forKey:@"discount_percentSpecified"];
    [encoder encodeInt32:self.discount_amount forKey:@"discount_amount"];
    [encoder encodeInt32:self.discount_amountSpecified forKey:@"discount_amountSpecified"];
    [encoder encodeInt32:self.base_discount_amount forKey:@"base_discount_amount"];
    [encoder encodeInt32:self.base_discount_amountSpecified forKey:@"base_discount_amountSpecified"];
    [encoder encodeInt32:self.tax_percent forKey:@"tax_percent"];
    [encoder encodeInt32:self.tax_percentSpecified forKey:@"tax_percentSpecified"];
    [encoder encodeInt32:self.tax_amount forKey:@"tax_amount"];
    [encoder encodeInt32:self.tax_amountSpecified forKey:@"tax_amountSpecified"];
    [encoder encodeInt32:self.base_tax_amount forKey:@"base_tax_amount"];
    [encoder encodeInt32:self.base_tax_amountSpecified forKey:@"base_tax_amountSpecified"];
    [encoder encodeInt32:self.row_total forKey:@"row_total"];
    [encoder encodeInt32:self.row_totalSpecified forKey:@"row_totalSpecified"];
    [encoder encodeInt32:self.base_row_total forKey:@"base_row_total"];
    [encoder encodeInt32:self.base_row_totalSpecified forKey:@"base_row_totalSpecified"];
    [encoder encodeInt32:self.row_total_with_discount forKey:@"row_total_with_discount"];
    [encoder encodeInt32:self.row_total_with_discountSpecified forKey:@"row_total_with_discountSpecified"];
    [encoder encodeInt32:self.row_weight forKey:@"row_weight"];
    [encoder encodeInt32:self.row_weightSpecified forKey:@"row_weightSpecified"];
    [encoder encodeObject:self.product_type forKey:@"product_type"];
    [encoder encodeInt32:self.base_tax_before_discount forKey:@"base_tax_before_discount"];
    [encoder encodeInt32:self.base_tax_before_discountSpecified forKey:@"base_tax_before_discountSpecified"];
    [encoder encodeInt32:self.tax_before_discount forKey:@"tax_before_discount"];
    [encoder encodeInt32:self.tax_before_discountSpecified forKey:@"tax_before_discountSpecified"];
    [encoder encodeInt32:self.original_custom_price forKey:@"original_custom_price"];
    [encoder encodeInt32:self.original_custom_priceSpecified forKey:@"original_custom_priceSpecified"];
    [encoder encodeInt32:self.base_cost forKey:@"base_cost"];
    [encoder encodeInt32:self.base_costSpecified forKey:@"base_costSpecified"];
    [encoder encodeInt32:self.price_incl_tax forKey:@"price_incl_tax"];
    [encoder encodeInt32:self.price_incl_taxSpecified forKey:@"price_incl_taxSpecified"];
    [encoder encodeInt32:self.base_price_incl_tax forKey:@"base_price_incl_tax"];
    [encoder encodeInt32:self.base_price_incl_taxSpecified forKey:@"base_price_incl_taxSpecified"];
    [encoder encodeInt32:self.row_total_incl_tax forKey:@"row_total_incl_tax"];
    [encoder encodeInt32:self.row_total_incl_taxSpecified forKey:@"row_total_incl_taxSpecified"];
    [encoder encodeInt32:self.base_row_total_incl_tax forKey:@"base_row_total_incl_tax"];
    [encoder encodeInt32:self.base_row_total_incl_taxSpecified forKey:@"base_row_total_incl_taxSpecified"];
    [encoder encodeObject:self.gift_message_id forKey:@"gift_message_id"];
    [encoder encodeObject:self.gift_message forKey:@"gift_message"];
    [encoder encodeObject:self.gift_message_available forKey:@"gift_message_available"];
    [encoder encodeInt32:self.weee_tax_applied forKey:@"weee_tax_applied"];
    [encoder encodeInt32:self.weee_tax_appliedSpecified forKey:@"weee_tax_appliedSpecified"];
    [encoder encodeInt32:self.weee_tax_applied_amount forKey:@"weee_tax_applied_amount"];
    [encoder encodeInt32:self.weee_tax_applied_amountSpecified forKey:@"weee_tax_applied_amountSpecified"];
    [encoder encodeInt32:self.weee_tax_applied_row_amount forKey:@"weee_tax_applied_row_amount"];
    [encoder encodeInt32:self.weee_tax_applied_row_amountSpecified forKey:@"weee_tax_applied_row_amountSpecified"];
    [encoder encodeInt32:self.base_weee_tax_applied_amount forKey:@"base_weee_tax_applied_amount"];
    [encoder encodeInt32:self.base_weee_tax_applied_amountSpecified forKey:@"base_weee_tax_applied_amountSpecified"];
    [encoder encodeInt32:self.base_weee_tax_applied_row_amount forKey:@"base_weee_tax_applied_row_amount"];
    [encoder encodeInt32:self.base_weee_tax_applied_row_amountSpecified forKey:@"base_weee_tax_applied_row_amountSpecified"];
    [encoder encodeInt32:self.weee_tax_disposition forKey:@"weee_tax_disposition"];
    [encoder encodeInt32:self.weee_tax_dispositionSpecified forKey:@"weee_tax_dispositionSpecified"];
    [encoder encodeInt32:self.weee_tax_row_disposition forKey:@"weee_tax_row_disposition"];
    [encoder encodeInt32:self.weee_tax_row_dispositionSpecified forKey:@"weee_tax_row_dispositionSpecified"];
    [encoder encodeInt32:self.base_weee_tax_disposition forKey:@"base_weee_tax_disposition"];
    [encoder encodeInt32:self.base_weee_tax_dispositionSpecified forKey:@"base_weee_tax_dispositionSpecified"];
    [encoder encodeInt32:self.base_weee_tax_row_disposition forKey:@"base_weee_tax_row_disposition"];
    [encoder encodeInt32:self.base_weee_tax_row_dispositionSpecified forKey:@"base_weee_tax_row_dispositionSpecified"];
    [encoder encodeObject:self.tax_class_id forKey:@"tax_class_id"];
}


- (id)copyWithZone:(NSZone *)zone
{
    shoppingCartItemEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.item_id copy];
    finalCopy.item_id = copy1;
    
    NSString *copy2 = [self.created_at copy];
    finalCopy.created_at = copy2;
    
    NSString *copy3 = [self.updated_at copy];
    finalCopy.updated_at = copy3;
    
    NSString *copy4 = [self.product_id copy];
    finalCopy.product_id = copy4;
    
    NSString *copy5 = [self.store_id copy];
    finalCopy.store_id = copy5;
    
    NSString *copy6 = [self.parent_item_id copy];
    finalCopy.parent_item_id = copy6;
    
    finalCopy.is_virtual = self.is_virtual;
    
    finalCopy.is_virtualSpecified = self.is_virtualSpecified;
    
    NSString *copy9 = [self.sku copy];
    finalCopy.sku = copy9;
    
    NSString *copy10 = [self.name copy];
    finalCopy.name = copy10;
    
    NSString *copy11 = [self.description copy];
    finalCopy.description = copy11;
    
    NSString *copy12 = [self.applied_rule_ids copy];
    finalCopy.applied_rule_ids = copy12;
    
    NSString *copy13 = [self.additional_data copy];
    finalCopy.additional_data = copy13;
    
    NSString *copy14 = [self.free_shipping copy];
    finalCopy.free_shipping = copy14;
    
    NSString *copy15 = [self.is_qty_decimal copy];
    finalCopy.is_qty_decimal = copy15;
    
    NSString *copy16 = [self.no_discount copy];
    finalCopy.no_discount = copy16;
    
    finalCopy.weight = self.weight;
    
    finalCopy.weightSpecified = self.weightSpecified;
    
    finalCopy.qty = self.qty;
    
    finalCopy.qtySpecified = self.qtySpecified;
    
    finalCopy.price = self.price;
    
    finalCopy.priceSpecified = self.priceSpecified;
    
    finalCopy.base_price = self.base_price;
    
    finalCopy.base_priceSpecified = self.base_priceSpecified;
    
    finalCopy.custom_price = self.custom_price;
    
    finalCopy.custom_priceSpecified = self.custom_priceSpecified;
    
    finalCopy.discount_percent = self.discount_percent;
    
    finalCopy.discount_percentSpecified = self.discount_percentSpecified;
    
    finalCopy.discount_amount = self.discount_amount;
    
    finalCopy.discount_amountSpecified = self.discount_amountSpecified;
    
    finalCopy.base_discount_amount = self.base_discount_amount;
    
    finalCopy.base_discount_amountSpecified = self.base_discount_amountSpecified;
    
    finalCopy.tax_percent = self.tax_percent;
    
    finalCopy.tax_percentSpecified = self.tax_percentSpecified;
    
    finalCopy.tax_amount = self.tax_amount;
    
    finalCopy.tax_amountSpecified = self.tax_amountSpecified;
    
    finalCopy.base_tax_amount = self.base_tax_amount;
    
    finalCopy.base_tax_amountSpecified = self.base_tax_amountSpecified;
    
    finalCopy.row_total = self.row_total;
    
    finalCopy.row_totalSpecified = self.row_totalSpecified;
    
    finalCopy.base_row_total = self.base_row_total;
    
    finalCopy.base_row_totalSpecified = self.base_row_totalSpecified;
    
    finalCopy.row_total_with_discount = self.row_total_with_discount;
    
    finalCopy.row_total_with_discountSpecified = self.row_total_with_discountSpecified;
    
    finalCopy.row_weight = self.row_weight;
    
    finalCopy.row_weightSpecified = self.row_weightSpecified;
    
    NSString *copy47 = [self.product_type copy];
    finalCopy.product_type = copy47;
    
    finalCopy.base_tax_before_discount = self.base_tax_before_discount;
    
    finalCopy.base_tax_before_discountSpecified = self.base_tax_before_discountSpecified;
    
    finalCopy.tax_before_discount = self.tax_before_discount;
    
    finalCopy.tax_before_discountSpecified = self.tax_before_discountSpecified;
    
    finalCopy.original_custom_price = self.original_custom_price;
    
    finalCopy.original_custom_priceSpecified = self.original_custom_priceSpecified;
    
    finalCopy.base_cost = self.base_cost;
    
    finalCopy.base_costSpecified = self.base_costSpecified;
    
    finalCopy.price_incl_tax = self.price_incl_tax;
    
    finalCopy.price_incl_taxSpecified = self.price_incl_taxSpecified;
    
    finalCopy.base_price_incl_tax = self.base_price_incl_tax;
    
    finalCopy.base_price_incl_taxSpecified = self.base_price_incl_taxSpecified;
    
    finalCopy.row_total_incl_tax = self.row_total_incl_tax;
    
    finalCopy.row_total_incl_taxSpecified = self.row_total_incl_taxSpecified;
    
    finalCopy.base_row_total_incl_tax = self.base_row_total_incl_tax;
    
    finalCopy.base_row_total_incl_taxSpecified = self.base_row_total_incl_taxSpecified;
    
    NSString *copy64 = [self.gift_message_id copy];
    finalCopy.gift_message_id = copy64;
    
    NSString *copy65 = [self.gift_message copy];
    finalCopy.gift_message = copy65;
    
    NSString *copy66 = [self.gift_message_available copy];
    finalCopy.gift_message_available = copy66;
    
    finalCopy.weee_tax_applied = self.weee_tax_applied;
    
    finalCopy.weee_tax_appliedSpecified = self.weee_tax_appliedSpecified;
    
    finalCopy.weee_tax_applied_amount = self.weee_tax_applied_amount;
    
    finalCopy.weee_tax_applied_amountSpecified = self.weee_tax_applied_amountSpecified;
    
    finalCopy.weee_tax_applied_row_amount = self.weee_tax_applied_row_amount;
    
    finalCopy.weee_tax_applied_row_amountSpecified = self.weee_tax_applied_row_amountSpecified;
    
    finalCopy.base_weee_tax_applied_amount = self.base_weee_tax_applied_amount;
    
    finalCopy.base_weee_tax_applied_amountSpecified = self.base_weee_tax_applied_amountSpecified;
    
    finalCopy.base_weee_tax_applied_row_amount = self.base_weee_tax_applied_row_amount;
    
    finalCopy.base_weee_tax_applied_row_amountSpecified = self.base_weee_tax_applied_row_amountSpecified;
    
    finalCopy.weee_tax_disposition = self.weee_tax_disposition;
    
    finalCopy.weee_tax_dispositionSpecified = self.weee_tax_dispositionSpecified;
    
    finalCopy.weee_tax_row_disposition = self.weee_tax_row_disposition;
    
    finalCopy.weee_tax_row_dispositionSpecified = self.weee_tax_row_dispositionSpecified;
    
    finalCopy.base_weee_tax_disposition = self.base_weee_tax_disposition;
    
    finalCopy.base_weee_tax_dispositionSpecified = self.base_weee_tax_dispositionSpecified;
    
    finalCopy.base_weee_tax_row_disposition = self.base_weee_tax_row_disposition;
    
    finalCopy.base_weee_tax_row_dispositionSpecified = self.base_weee_tax_row_dispositionSpecified;
    
    NSString *copy85 = [self.tax_class_id copy];
    finalCopy.tax_class_id = copy85;
    
    return finalCopy;
}

@end
