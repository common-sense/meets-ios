//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shoppingCartInfoEntity.h" 


@implementation shoppingCartInfoEntity

- (id)initWithArray:(NSArray *)array
{
    if (self = [super init])
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setStore_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"created_at"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCreated_at:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"updated_at"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUpdated_at:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"converted_at"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setConverted_at:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"quote_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setQuote_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"quote_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setQuote_idSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_active"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_active:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_activeSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_activeSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_virtual"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_virtual:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_virtualSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_virtualSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_multi_shipping"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_multi_shipping:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_multi_shippingSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setIs_multi_shippingSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"items_count"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setItems_count:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"items_countSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setItems_countSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"items_qty"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setItems_qty:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"items_qtySpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setItems_qtySpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"orig_order_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setOrig_order_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_to_base_rate"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setStore_to_base_rate:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_to_quote_rate"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setStore_to_quote_rate:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_currency_code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setBase_currency_code:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"store_currency_code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setStore_currency_code:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"quote_currency_code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setQuote_currency_code:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"grand_total"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGrand_total:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_grand_total"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setBase_grand_total:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"checkout_method"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCheckout_method:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_tax_class_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_tax_class_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_group_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_group_id:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_group_idSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_group_idSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_email"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_email:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_prefix"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_prefix:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_firstname"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_firstname:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_middlename"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_middlename:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_lastname"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_lastname:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_suffix"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_suffix:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_note"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_note:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_note_notify"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_note_notify:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_is_guest"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_is_guest:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"applied_rule_ids"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setApplied_rule_ids:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"reserved_order_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setReserved_order_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"password_hash"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setPassword_hash:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"coupon_code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCoupon_code:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"global_currency_code"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGlobal_currency_code:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_to_global_rate"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_to_global_rate:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_to_global_rateSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_to_global_rateSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_to_quote_rate"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_to_quote_rate:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_to_quote_rateSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_to_quote_rateSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_taxvat"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_taxvat:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_gender"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCustomer_gender:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"subtotal"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setSubtotal:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"subtotalSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setSubtotalSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_subtotal"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_subtotal:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_subtotalSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_subtotalSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"subtotal_with_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setSubtotal_with_discount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"subtotal_with_discountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setSubtotal_with_discountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_subtotal_with_discount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_subtotal_with_discount:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_subtotal_with_discountSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_subtotal_with_discountSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"ext_shipping_info"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setExt_shipping_info:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_message_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_message_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_message"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_message:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_balance_amount_used"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_balance_amount_used:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"customer_balance_amount_usedSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setCustomer_balance_amount_usedSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_customer_balance_amount_used"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_customer_balance_amount_used:[nodeContentValue doubleValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_customer_balance_amount_usedSpecified"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setBase_customer_balance_amount_usedSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"use_customer_balance"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUse_customer_balance:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_cards_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_cards_amount:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_gift_cards_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setBase_gift_cards_amount:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"gift_cards_amount_used"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setGift_cards_amount_used:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"use_reward_points"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUse_reward_points:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"reward_points_balance"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setReward_points_balance:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"base_reward_currency_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setBase_reward_currency_amount:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"reward_currency_amount"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setReward_currency_amount:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"shipping_address"]==NSOrderedSame))
                {
                    NSArray *arrayXml = [[array  objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    shoppingCartAddressEntity *nodeContentValue = [[shoppingCartAddressEntity alloc] initWithArray:arrayXml];
                    [self setShipping_address:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"billing_address"]==NSOrderedSame))
                {
                    NSArray *arrayXml = [[array  objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    shoppingCartAddressEntity *nodeContentValue = [[shoppingCartAddressEntity alloc] initWithArray:arrayXml];
                    [self setBilling_address:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"items"]==NSOrderedSame))
                {
                    NSArray *array1 = [[array objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    NSMutableArray *dataArray1 = [[NSMutableArray alloc]init];
                    for (int i1 = 0; i1 < [array1 count]; i1++)
                    {
                        NSArray *arrayXml = [[array1  objectAtIndex:i1] objectForKey:@"nodeChildArray"];
                        shoppingCartItemEntity *item = [[shoppingCartItemEntity alloc] initWithArray:arrayXml];
                        [dataArray1  addObject:item];
                    }
                    [self setItems:dataArray1];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"payment"]==NSOrderedSame))
                {
                    NSArray *arrayXml = [[array  objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    shoppingCartPaymentEntity *nodeContentValue = [[shoppingCartPaymentEntity alloc] initWithArray:arrayXml];
                    [self setPayment:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shoppingCartInfoEntity>" ];
    if (self.store_id != nil)
    {
        [nsString appendFormat:@"<store_id>%@</store_id>" , [self store_id]];
    }
    if (self.created_at != nil)
    {
        [nsString appendFormat:@"<created_at>%@</created_at>" , [self created_at]];
    }
    if (self.updated_at != nil)
    {
        [nsString appendFormat:@"<updated_at>%@</updated_at>" , [self updated_at]];
    }
    if (self.converted_at != nil)
    {
        [nsString appendFormat:@"<converted_at>%@</converted_at>" , [self converted_at]];
    }
    [nsString appendFormat:@"<quote_id>%d</quote_id>" , [self quote_id]];
    [nsString appendFormat:@"<quote_idSpecified>%d</quote_idSpecified>" , [self quote_idSpecified]];
    [nsString appendFormat:@"<is_active>%d</is_active>" , [self is_active]];
    [nsString appendFormat:@"<is_activeSpecified>%d</is_activeSpecified>" , [self is_activeSpecified]];
    [nsString appendFormat:@"<is_virtual>%d</is_virtual>" , [self is_virtual]];
    [nsString appendFormat:@"<is_virtualSpecified>%d</is_virtualSpecified>" , [self is_virtualSpecified]];
    [nsString appendFormat:@"<is_multi_shipping>%d</is_multi_shipping>" , [self is_multi_shipping]];
    [nsString appendFormat:@"<is_multi_shippingSpecified>%d</is_multi_shippingSpecified>" , [self is_multi_shippingSpecified]];
    [nsString appendFormat:@"<items_count>%lf</items_count>" , [self items_count]];
    [nsString appendFormat:@"<items_countSpecified>%d</items_countSpecified>" , [self items_countSpecified]];
    [nsString appendFormat:@"<items_qty>%lf</items_qty>" , [self items_qty]];
    [nsString appendFormat:@"<items_qtySpecified>%d</items_qtySpecified>" , [self items_qtySpecified]];
    if (self.orig_order_id != nil)
    {
        [nsString appendFormat:@"<orig_order_id>%@</orig_order_id>" , [self orig_order_id]];
    }
    if (self.store_to_base_rate != nil)
    {
        [nsString appendFormat:@"<store_to_base_rate>%@</store_to_base_rate>" , [self store_to_base_rate]];
    }
    if (self.store_to_quote_rate != nil)
    {
        [nsString appendFormat:@"<store_to_quote_rate>%@</store_to_quote_rate>" , [self store_to_quote_rate]];
    }
    if (self.base_currency_code != nil)
    {
        [nsString appendFormat:@"<base_currency_code>%@</base_currency_code>" , [self base_currency_code]];
    }
    if (self.store_currency_code != nil)
    {
        [nsString appendFormat:@"<store_currency_code>%@</store_currency_code>" , [self store_currency_code]];
    }
    if (self.quote_currency_code != nil)
    {
        [nsString appendFormat:@"<quote_currency_code>%@</quote_currency_code>" , [self quote_currency_code]];
    }
    if (self.grand_total != nil)
    {
        [nsString appendFormat:@"<grand_total>%@</grand_total>" , [self grand_total]];
    }
    if (self.base_grand_total != nil)
    {
        [nsString appendFormat:@"<base_grand_total>%@</base_grand_total>" , [self base_grand_total]];
    }
    if (self.checkout_method != nil)
    {
        [nsString appendFormat:@"<checkout_method>%@</checkout_method>" , [self checkout_method]];
    }
    if (self.customer_id != nil)
    {
        [nsString appendFormat:@"<customer_id>%@</customer_id>" , [self customer_id]];
    }
    if (self.customer_tax_class_id != nil)
    {
        [nsString appendFormat:@"<customer_tax_class_id>%@</customer_tax_class_id>" , [self customer_tax_class_id]];
    }
    [nsString appendFormat:@"<customer_group_id>%d</customer_group_id>" , [self customer_group_id]];
    [nsString appendFormat:@"<customer_group_idSpecified>%d</customer_group_idSpecified>" , [self customer_group_idSpecified]];
    if (self.customer_email != nil)
    {
        [nsString appendFormat:@"<customer_email>%@</customer_email>" , [self customer_email]];
    }
    if (self.customer_prefix != nil)
    {
        [nsString appendFormat:@"<customer_prefix>%@</customer_prefix>" , [self customer_prefix]];
    }
    if (self.customer_firstname != nil)
    {
        [nsString appendFormat:@"<customer_firstname>%@</customer_firstname>" , [self customer_firstname]];
    }
    if (self.customer_middlename != nil)
    {
        [nsString appendFormat:@"<customer_middlename>%@</customer_middlename>" , [self customer_middlename]];
    }
    if (self.customer_lastname != nil)
    {
        [nsString appendFormat:@"<customer_lastname>%@</customer_lastname>" , [self customer_lastname]];
    }
    if (self.customer_suffix != nil)
    {
        [nsString appendFormat:@"<customer_suffix>%@</customer_suffix>" , [self customer_suffix]];
    }
    if (self.customer_note != nil)
    {
        [nsString appendFormat:@"<customer_note>%@</customer_note>" , [self customer_note]];
    }
    if (self.customer_note_notify != nil)
    {
        [nsString appendFormat:@"<customer_note_notify>%@</customer_note_notify>" , [self customer_note_notify]];
    }
    if (self.customer_is_guest != nil)
    {
        [nsString appendFormat:@"<customer_is_guest>%@</customer_is_guest>" , [self customer_is_guest]];
    }
    if (self.applied_rule_ids != nil)
    {
        [nsString appendFormat:@"<applied_rule_ids>%@</applied_rule_ids>" , [self applied_rule_ids]];
    }
    if (self.reserved_order_id != nil)
    {
        [nsString appendFormat:@"<reserved_order_id>%@</reserved_order_id>" , [self reserved_order_id]];
    }
    if (self.password_hash != nil)
    {
        [nsString appendFormat:@"<password_hash>%@</password_hash>" , [self password_hash]];
    }
    if (self.coupon_code != nil)
    {
        [nsString appendFormat:@"<coupon_code>%@</coupon_code>" , [self coupon_code]];
    }
    if (self.global_currency_code != nil)
    {
        [nsString appendFormat:@"<global_currency_code>%@</global_currency_code>" , [self global_currency_code]];
    }
    [nsString appendFormat:@"<base_to_global_rate>%lf</base_to_global_rate>" , [self base_to_global_rate]];
    [nsString appendFormat:@"<base_to_global_rateSpecified>%d</base_to_global_rateSpecified>" , [self base_to_global_rateSpecified]];
    [nsString appendFormat:@"<base_to_quote_rate>%lf</base_to_quote_rate>" , [self base_to_quote_rate]];
    [nsString appendFormat:@"<base_to_quote_rateSpecified>%d</base_to_quote_rateSpecified>" , [self base_to_quote_rateSpecified]];
    if (self.customer_taxvat != nil)
    {
        [nsString appendFormat:@"<customer_taxvat>%@</customer_taxvat>" , [self customer_taxvat]];
    }
    if (self.customer_gender != nil)
    {
        [nsString appendFormat:@"<customer_gender>%@</customer_gender>" , [self customer_gender]];
    }
    [nsString appendFormat:@"<subtotal>%lf</subtotal>" , [self subtotal]];
    [nsString appendFormat:@"<subtotalSpecified>%d</subtotalSpecified>" , [self subtotalSpecified]];
    [nsString appendFormat:@"<base_subtotal>%lf</base_subtotal>" , [self base_subtotal]];
    [nsString appendFormat:@"<base_subtotalSpecified>%d</base_subtotalSpecified>" , [self base_subtotalSpecified]];
    [nsString appendFormat:@"<subtotal_with_discount>%lf</subtotal_with_discount>" , [self subtotal_with_discount]];
    [nsString appendFormat:@"<subtotal_with_discountSpecified>%d</subtotal_with_discountSpecified>" , [self subtotal_with_discountSpecified]];
    [nsString appendFormat:@"<base_subtotal_with_discount>%lf</base_subtotal_with_discount>" , [self base_subtotal_with_discount]];
    [nsString appendFormat:@"<base_subtotal_with_discountSpecified>%d</base_subtotal_with_discountSpecified>" , [self base_subtotal_with_discountSpecified]];
    if (self.ext_shipping_info != nil)
    {
        [nsString appendFormat:@"<ext_shipping_info>%@</ext_shipping_info>" , [self ext_shipping_info]];
    }
    if (self.gift_message_id != nil)
    {
        [nsString appendFormat:@"<gift_message_id>%@</gift_message_id>" , [self gift_message_id]];
    }
    if (self.gift_message != nil)
    {
        [nsString appendFormat:@"<gift_message>%@</gift_message>" , [self gift_message]];
    }
    [nsString appendFormat:@"<customer_balance_amount_used>%lf</customer_balance_amount_used>" , [self customer_balance_amount_used]];
    [nsString appendFormat:@"<customer_balance_amount_usedSpecified>%d</customer_balance_amount_usedSpecified>" , [self customer_balance_amount_usedSpecified]];
    [nsString appendFormat:@"<base_customer_balance_amount_used>%lf</base_customer_balance_amount_used>" , [self base_customer_balance_amount_used]];
    [nsString appendFormat:@"<base_customer_balance_amount_usedSpecified>%d</base_customer_balance_amount_usedSpecified>" , [self base_customer_balance_amount_usedSpecified]];
    if (self.use_customer_balance != nil)
    {
        [nsString appendFormat:@"<use_customer_balance>%@</use_customer_balance>" , [self use_customer_balance]];
    }
    if (self.gift_cards_amount != nil)
    {
        [nsString appendFormat:@"<gift_cards_amount>%@</gift_cards_amount>" , [self gift_cards_amount]];
    }
    if (self.base_gift_cards_amount != nil)
    {
        [nsString appendFormat:@"<base_gift_cards_amount>%@</base_gift_cards_amount>" , [self base_gift_cards_amount]];
    }
    if (self.gift_cards_amount_used != nil)
    {
        [nsString appendFormat:@"<gift_cards_amount_used>%@</gift_cards_amount_used>" , [self gift_cards_amount_used]];
    }
    if (self.use_reward_points != nil)
    {
        [nsString appendFormat:@"<use_reward_points>%@</use_reward_points>" , [self use_reward_points]];
    }
    if (self.reward_points_balance != nil)
    {
        [nsString appendFormat:@"<reward_points_balance>%@</reward_points_balance>" , [self reward_points_balance]];
    }
    if (self.base_reward_currency_amount != nil)
    {
        [nsString appendFormat:@"<base_reward_currency_amount>%@</base_reward_currency_amount>" , [self base_reward_currency_amount]];
    }
    if (self.reward_currency_amount != nil)
    {
        [nsString appendFormat:@"<reward_currency_amount>%@</reward_currency_amount>" , [self reward_currency_amount]];
    }
    if (self.shipping_address != nil)
    {
        [nsString appendFormat:@"<shipping_address>%@</shipping_address>" , [self.shipping_address toString:NO]];
    }
    if (self.billing_address != nil)
    {
        [nsString appendFormat:@"<billing_address>%@</billing_address>" , [self.billing_address toString:NO]];
    }
    if (self.items != nil)
    {
        [nsString appendFormat:@"<items>"];
        for (shoppingCartItemEntity *elm in self.items)
        {
            [nsString appendFormat:@"%@", [elm toString:YES]];
        }
        [nsString appendFormat:@"</items>"];
    }
    if (self.payment != nil)
    {
        [nsString appendFormat:@"<payment>%@</payment>" , [self.payment toString:NO]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</shoppingCartInfoEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super init])
    {
        self.store_id = [decoder decodeObjectForKey:@"store_id"];
        self.created_at = [decoder decodeObjectForKey:@"created_at"];
        self.updated_at = [decoder decodeObjectForKey:@"updated_at"];
        self.converted_at = [decoder decodeObjectForKey:@"converted_at"];
        self.quote_id = [decoder decodeInt32ForKey:@"quote_id"];
        self.quote_idSpecified = [decoder decodeInt32ForKey:@"quote_idSpecified"];
        self.is_active = [decoder decodeInt32ForKey:@"is_active"];
        self.is_activeSpecified = [decoder decodeInt32ForKey:@"is_activeSpecified"];
        self.is_virtual = [decoder decodeInt32ForKey:@"is_virtual"];
        self.is_virtualSpecified = [decoder decodeInt32ForKey:@"is_virtualSpecified"];
        self.is_multi_shipping = [decoder decodeInt32ForKey:@"is_multi_shipping"];
        self.is_multi_shippingSpecified = [decoder decodeInt32ForKey:@"is_multi_shippingSpecified"];
        self.items_count = [decoder decodeInt32ForKey:@"items_count"];
        self.items_countSpecified = [decoder decodeInt32ForKey:@"items_countSpecified"];
        self.items_qty = [decoder decodeInt32ForKey:@"items_qty"];
        self.items_qtySpecified = [decoder decodeInt32ForKey:@"items_qtySpecified"];
        self.orig_order_id = [decoder decodeObjectForKey:@"orig_order_id"];
        self.store_to_base_rate = [decoder decodeObjectForKey:@"store_to_base_rate"];
        self.store_to_quote_rate = [decoder decodeObjectForKey:@"store_to_quote_rate"];
        self.base_currency_code = [decoder decodeObjectForKey:@"base_currency_code"];
        self.store_currency_code = [decoder decodeObjectForKey:@"store_currency_code"];
        self.quote_currency_code = [decoder decodeObjectForKey:@"quote_currency_code"];
        self.grand_total = [decoder decodeObjectForKey:@"grand_total"];
        self.base_grand_total = [decoder decodeObjectForKey:@"base_grand_total"];
        self.checkout_method = [decoder decodeObjectForKey:@"checkout_method"];
        self.customer_id = [decoder decodeObjectForKey:@"customer_id"];
        self.customer_tax_class_id = [decoder decodeObjectForKey:@"customer_tax_class_id"];
        self.customer_group_id = [decoder decodeInt32ForKey:@"customer_group_id"];
        self.customer_group_idSpecified = [decoder decodeInt32ForKey:@"customer_group_idSpecified"];
        self.customer_email = [decoder decodeObjectForKey:@"customer_email"];
        self.customer_prefix = [decoder decodeObjectForKey:@"customer_prefix"];
        self.customer_firstname = [decoder decodeObjectForKey:@"customer_firstname"];
        self.customer_middlename = [decoder decodeObjectForKey:@"customer_middlename"];
        self.customer_lastname = [decoder decodeObjectForKey:@"customer_lastname"];
        self.customer_suffix = [decoder decodeObjectForKey:@"customer_suffix"];
        self.customer_note = [decoder decodeObjectForKey:@"customer_note"];
        self.customer_note_notify = [decoder decodeObjectForKey:@"customer_note_notify"];
        self.customer_is_guest = [decoder decodeObjectForKey:@"customer_is_guest"];
        self.applied_rule_ids = [decoder decodeObjectForKey:@"applied_rule_ids"];
        self.reserved_order_id = [decoder decodeObjectForKey:@"reserved_order_id"];
        self.password_hash = [decoder decodeObjectForKey:@"password_hash"];
        self.coupon_code = [decoder decodeObjectForKey:@"coupon_code"];
        self.global_currency_code = [decoder decodeObjectForKey:@"global_currency_code"];
        self.base_to_global_rate = [decoder decodeInt32ForKey:@"base_to_global_rate"];
        self.base_to_global_rateSpecified = [decoder decodeInt32ForKey:@"base_to_global_rateSpecified"];
        self.base_to_quote_rate = [decoder decodeInt32ForKey:@"base_to_quote_rate"];
        self.base_to_quote_rateSpecified = [decoder decodeInt32ForKey:@"base_to_quote_rateSpecified"];
        self.customer_taxvat = [decoder decodeObjectForKey:@"customer_taxvat"];
        self.customer_gender = [decoder decodeObjectForKey:@"customer_gender"];
        self.subtotal = [decoder decodeInt32ForKey:@"subtotal"];
        self.subtotalSpecified = [decoder decodeInt32ForKey:@"subtotalSpecified"];
        self.base_subtotal = [decoder decodeInt32ForKey:@"base_subtotal"];
        self.base_subtotalSpecified = [decoder decodeInt32ForKey:@"base_subtotalSpecified"];
        self.subtotal_with_discount = [decoder decodeInt32ForKey:@"subtotal_with_discount"];
        self.subtotal_with_discountSpecified = [decoder decodeInt32ForKey:@"subtotal_with_discountSpecified"];
        self.base_subtotal_with_discount = [decoder decodeInt32ForKey:@"base_subtotal_with_discount"];
        self.base_subtotal_with_discountSpecified = [decoder decodeInt32ForKey:@"base_subtotal_with_discountSpecified"];
        self.ext_shipping_info = [decoder decodeObjectForKey:@"ext_shipping_info"];
        self.gift_message_id = [decoder decodeObjectForKey:@"gift_message_id"];
        self.gift_message = [decoder decodeObjectForKey:@"gift_message"];
        self.customer_balance_amount_used = [decoder decodeInt32ForKey:@"customer_balance_amount_used"];
        self.customer_balance_amount_usedSpecified = [decoder decodeInt32ForKey:@"customer_balance_amount_usedSpecified"];
        self.base_customer_balance_amount_used = [decoder decodeInt32ForKey:@"base_customer_balance_amount_used"];
        self.base_customer_balance_amount_usedSpecified = [decoder decodeInt32ForKey:@"base_customer_balance_amount_usedSpecified"];
        self.use_customer_balance = [decoder decodeObjectForKey:@"use_customer_balance"];
        self.gift_cards_amount = [decoder decodeObjectForKey:@"gift_cards_amount"];
        self.base_gift_cards_amount = [decoder decodeObjectForKey:@"base_gift_cards_amount"];
        self.gift_cards_amount_used = [decoder decodeObjectForKey:@"gift_cards_amount_used"];
        self.use_reward_points = [decoder decodeObjectForKey:@"use_reward_points"];
        self.reward_points_balance = [decoder decodeObjectForKey:@"reward_points_balance"];
        self.base_reward_currency_amount = [decoder decodeObjectForKey:@"base_reward_currency_amount"];
        self.reward_currency_amount = [decoder decodeObjectForKey:@"reward_currency_amount"];
        self.shipping_address = [decoder decodeObjectForKey:@"shipping_address"];
        self.billing_address = [decoder decodeObjectForKey:@"billing_address"];
        self.items = [decoder decodeObjectForKey:@"items"];
        self.payment = [decoder decodeObjectForKey:@"payment"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.store_id forKey:@"store_id"];
    [encoder encodeObject:self.created_at forKey:@"created_at"];
    [encoder encodeObject:self.updated_at forKey:@"updated_at"];
    [encoder encodeObject:self.converted_at forKey:@"converted_at"];
    [encoder encodeInt32:self.quote_id forKey:@"quote_id"];
    [encoder encodeInt32:self.quote_idSpecified forKey:@"quote_idSpecified"];
    [encoder encodeInt32:self.is_active forKey:@"is_active"];
    [encoder encodeInt32:self.is_activeSpecified forKey:@"is_activeSpecified"];
    [encoder encodeInt32:self.is_virtual forKey:@"is_virtual"];
    [encoder encodeInt32:self.is_virtualSpecified forKey:@"is_virtualSpecified"];
    [encoder encodeInt32:self.is_multi_shipping forKey:@"is_multi_shipping"];
    [encoder encodeInt32:self.is_multi_shippingSpecified forKey:@"is_multi_shippingSpecified"];
    [encoder encodeInt32:self.items_count forKey:@"items_count"];
    [encoder encodeInt32:self.items_countSpecified forKey:@"items_countSpecified"];
    [encoder encodeInt32:self.items_qty forKey:@"items_qty"];
    [encoder encodeInt32:self.items_qtySpecified forKey:@"items_qtySpecified"];
    [encoder encodeObject:self.orig_order_id forKey:@"orig_order_id"];
    [encoder encodeObject:self.store_to_base_rate forKey:@"store_to_base_rate"];
    [encoder encodeObject:self.store_to_quote_rate forKey:@"store_to_quote_rate"];
    [encoder encodeObject:self.base_currency_code forKey:@"base_currency_code"];
    [encoder encodeObject:self.store_currency_code forKey:@"store_currency_code"];
    [encoder encodeObject:self.quote_currency_code forKey:@"quote_currency_code"];
    [encoder encodeObject:self.grand_total forKey:@"grand_total"];
    [encoder encodeObject:self.base_grand_total forKey:@"base_grand_total"];
    [encoder encodeObject:self.checkout_method forKey:@"checkout_method"];
    [encoder encodeObject:self.customer_id forKey:@"customer_id"];
    [encoder encodeObject:self.customer_tax_class_id forKey:@"customer_tax_class_id"];
    [encoder encodeInt32:self.customer_group_id forKey:@"customer_group_id"];
    [encoder encodeInt32:self.customer_group_idSpecified forKey:@"customer_group_idSpecified"];
    [encoder encodeObject:self.customer_email forKey:@"customer_email"];
    [encoder encodeObject:self.customer_prefix forKey:@"customer_prefix"];
    [encoder encodeObject:self.customer_firstname forKey:@"customer_firstname"];
    [encoder encodeObject:self.customer_middlename forKey:@"customer_middlename"];
    [encoder encodeObject:self.customer_lastname forKey:@"customer_lastname"];
    [encoder encodeObject:self.customer_suffix forKey:@"customer_suffix"];
    [encoder encodeObject:self.customer_note forKey:@"customer_note"];
    [encoder encodeObject:self.customer_note_notify forKey:@"customer_note_notify"];
    [encoder encodeObject:self.customer_is_guest forKey:@"customer_is_guest"];
    [encoder encodeObject:self.applied_rule_ids forKey:@"applied_rule_ids"];
    [encoder encodeObject:self.reserved_order_id forKey:@"reserved_order_id"];
    [encoder encodeObject:self.password_hash forKey:@"password_hash"];
    [encoder encodeObject:self.coupon_code forKey:@"coupon_code"];
    [encoder encodeObject:self.global_currency_code forKey:@"global_currency_code"];
    [encoder encodeInt32:self.base_to_global_rate forKey:@"base_to_global_rate"];
    [encoder encodeInt32:self.base_to_global_rateSpecified forKey:@"base_to_global_rateSpecified"];
    [encoder encodeInt32:self.base_to_quote_rate forKey:@"base_to_quote_rate"];
    [encoder encodeInt32:self.base_to_quote_rateSpecified forKey:@"base_to_quote_rateSpecified"];
    [encoder encodeObject:self.customer_taxvat forKey:@"customer_taxvat"];
    [encoder encodeObject:self.customer_gender forKey:@"customer_gender"];
    [encoder encodeInt32:self.subtotal forKey:@"subtotal"];
    [encoder encodeInt32:self.subtotalSpecified forKey:@"subtotalSpecified"];
    [encoder encodeInt32:self.base_subtotal forKey:@"base_subtotal"];
    [encoder encodeInt32:self.base_subtotalSpecified forKey:@"base_subtotalSpecified"];
    [encoder encodeInt32:self.subtotal_with_discount forKey:@"subtotal_with_discount"];
    [encoder encodeInt32:self.subtotal_with_discountSpecified forKey:@"subtotal_with_discountSpecified"];
    [encoder encodeInt32:self.base_subtotal_with_discount forKey:@"base_subtotal_with_discount"];
    [encoder encodeInt32:self.base_subtotal_with_discountSpecified forKey:@"base_subtotal_with_discountSpecified"];
    [encoder encodeObject:self.ext_shipping_info forKey:@"ext_shipping_info"];
    [encoder encodeObject:self.gift_message_id forKey:@"gift_message_id"];
    [encoder encodeObject:self.gift_message forKey:@"gift_message"];
    [encoder encodeInt32:self.customer_balance_amount_used forKey:@"customer_balance_amount_used"];
    [encoder encodeInt32:self.customer_balance_amount_usedSpecified forKey:@"customer_balance_amount_usedSpecified"];
    [encoder encodeInt32:self.base_customer_balance_amount_used forKey:@"base_customer_balance_amount_used"];
    [encoder encodeInt32:self.base_customer_balance_amount_usedSpecified forKey:@"base_customer_balance_amount_usedSpecified"];
    [encoder encodeObject:self.use_customer_balance forKey:@"use_customer_balance"];
    [encoder encodeObject:self.gift_cards_amount forKey:@"gift_cards_amount"];
    [encoder encodeObject:self.base_gift_cards_amount forKey:@"base_gift_cards_amount"];
    [encoder encodeObject:self.gift_cards_amount_used forKey:@"gift_cards_amount_used"];
    [encoder encodeObject:self.use_reward_points forKey:@"use_reward_points"];
    [encoder encodeObject:self.reward_points_balance forKey:@"reward_points_balance"];
    [encoder encodeObject:self.base_reward_currency_amount forKey:@"base_reward_currency_amount"];
    [encoder encodeObject:self.reward_currency_amount forKey:@"reward_currency_amount"];
    [encoder encodeObject:self.shipping_address forKey:@"shipping_address"];
    [encoder encodeObject:self.billing_address forKey:@"billing_address"];
    [encoder encodeObject:self.items forKey:@"items"];
    [encoder encodeObject:self.payment forKey:@"payment"];
}


- (id)copyWithZone:(NSZone *)zone
{
    shoppingCartInfoEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.store_id copy];
    finalCopy.store_id = copy1;
    
    NSString *copy2 = [self.created_at copy];
    finalCopy.created_at = copy2;
    
    NSString *copy3 = [self.updated_at copy];
    finalCopy.updated_at = copy3;
    
    NSString *copy4 = [self.converted_at copy];
    finalCopy.converted_at = copy4;
    
    finalCopy.quote_id = self.quote_id;
    
    finalCopy.quote_idSpecified = self.quote_idSpecified;
    
    finalCopy.is_active = self.is_active;
    
    finalCopy.is_activeSpecified = self.is_activeSpecified;
    
    finalCopy.is_virtual = self.is_virtual;
    
    finalCopy.is_virtualSpecified = self.is_virtualSpecified;
    
    finalCopy.is_multi_shipping = self.is_multi_shipping;
    
    finalCopy.is_multi_shippingSpecified = self.is_multi_shippingSpecified;
    
    finalCopy.items_count = self.items_count;
    
    finalCopy.items_countSpecified = self.items_countSpecified;
    
    finalCopy.items_qty = self.items_qty;
    
    finalCopy.items_qtySpecified = self.items_qtySpecified;
    
    NSString *copy17 = [self.orig_order_id copy];
    finalCopy.orig_order_id = copy17;
    
    NSString *copy18 = [self.store_to_base_rate copy];
    finalCopy.store_to_base_rate = copy18;
    
    NSString *copy19 = [self.store_to_quote_rate copy];
    finalCopy.store_to_quote_rate = copy19;
    
    NSString *copy20 = [self.base_currency_code copy];
    finalCopy.base_currency_code = copy20;
    
    NSString *copy21 = [self.store_currency_code copy];
    finalCopy.store_currency_code = copy21;
    
    NSString *copy22 = [self.quote_currency_code copy];
    finalCopy.quote_currency_code = copy22;
    
    NSString *copy23 = [self.grand_total copy];
    finalCopy.grand_total = copy23;
    
    NSString *copy24 = [self.base_grand_total copy];
    finalCopy.base_grand_total = copy24;
    
    NSString *copy25 = [self.checkout_method copy];
    finalCopy.checkout_method = copy25;
    
    NSString *copy26 = [self.customer_id copy];
    finalCopy.customer_id = copy26;
    
    NSString *copy27 = [self.customer_tax_class_id copy];
    finalCopy.customer_tax_class_id = copy27;
    
    finalCopy.customer_group_id = self.customer_group_id;
    
    finalCopy.customer_group_idSpecified = self.customer_group_idSpecified;
    
    NSString *copy30 = [self.customer_email copy];
    finalCopy.customer_email = copy30;
    
    NSString *copy31 = [self.customer_prefix copy];
    finalCopy.customer_prefix = copy31;
    
    NSString *copy32 = [self.customer_firstname copy];
    finalCopy.customer_firstname = copy32;
    
    NSString *copy33 = [self.customer_middlename copy];
    finalCopy.customer_middlename = copy33;
    
    NSString *copy34 = [self.customer_lastname copy];
    finalCopy.customer_lastname = copy34;
    
    NSString *copy35 = [self.customer_suffix copy];
    finalCopy.customer_suffix = copy35;
    
    NSString *copy36 = [self.customer_note copy];
    finalCopy.customer_note = copy36;
    
    NSString *copy37 = [self.customer_note_notify copy];
    finalCopy.customer_note_notify = copy37;
    
    NSString *copy38 = [self.customer_is_guest copy];
    finalCopy.customer_is_guest = copy38;
    
    NSString *copy39 = [self.applied_rule_ids copy];
    finalCopy.applied_rule_ids = copy39;
    
    NSString *copy40 = [self.reserved_order_id copy];
    finalCopy.reserved_order_id = copy40;
    
    NSString *copy41 = [self.password_hash copy];
    finalCopy.password_hash = copy41;
    
    NSString *copy42 = [self.coupon_code copy];
    finalCopy.coupon_code = copy42;
    
    NSString *copy43 = [self.global_currency_code copy];
    finalCopy.global_currency_code = copy43;
    
    finalCopy.base_to_global_rate = self.base_to_global_rate;
    
    finalCopy.base_to_global_rateSpecified = self.base_to_global_rateSpecified;
    
    finalCopy.base_to_quote_rate = self.base_to_quote_rate;
    
    finalCopy.base_to_quote_rateSpecified = self.base_to_quote_rateSpecified;
    
    NSString *copy48 = [self.customer_taxvat copy];
    finalCopy.customer_taxvat = copy48;
    
    NSString *copy49 = [self.customer_gender copy];
    finalCopy.customer_gender = copy49;
    
    finalCopy.subtotal = self.subtotal;
    
    finalCopy.subtotalSpecified = self.subtotalSpecified;
    
    finalCopy.base_subtotal = self.base_subtotal;
    
    finalCopy.base_subtotalSpecified = self.base_subtotalSpecified;
    
    finalCopy.subtotal_with_discount = self.subtotal_with_discount;
    
    finalCopy.subtotal_with_discountSpecified = self.subtotal_with_discountSpecified;
    
    finalCopy.base_subtotal_with_discount = self.base_subtotal_with_discount;
    
    finalCopy.base_subtotal_with_discountSpecified = self.base_subtotal_with_discountSpecified;
    
    NSString *copy58 = [self.ext_shipping_info copy];
    finalCopy.ext_shipping_info = copy58;
    
    NSString *copy59 = [self.gift_message_id copy];
    finalCopy.gift_message_id = copy59;
    
    NSString *copy60 = [self.gift_message copy];
    finalCopy.gift_message = copy60;
    
    finalCopy.customer_balance_amount_used = self.customer_balance_amount_used;
    
    finalCopy.customer_balance_amount_usedSpecified = self.customer_balance_amount_usedSpecified;
    
    finalCopy.base_customer_balance_amount_used = self.base_customer_balance_amount_used;
    
    finalCopy.base_customer_balance_amount_usedSpecified = self.base_customer_balance_amount_usedSpecified;
    
    NSString *copy65 = [self.use_customer_balance copy];
    finalCopy.use_customer_balance = copy65;
    
    NSString *copy66 = [self.gift_cards_amount copy];
    finalCopy.gift_cards_amount = copy66;
    
    NSString *copy67 = [self.base_gift_cards_amount copy];
    finalCopy.base_gift_cards_amount = copy67;
    
    NSString *copy68 = [self.gift_cards_amount_used copy];
    finalCopy.gift_cards_amount_used = copy68;
    
    NSString *copy69 = [self.use_reward_points copy];
    finalCopy.use_reward_points = copy69;
    
    NSString *copy70 = [self.reward_points_balance copy];
    finalCopy.reward_points_balance = copy70;
    
    NSString *copy71 = [self.base_reward_currency_amount copy];
    finalCopy.base_reward_currency_amount = copy71;
    
    NSString *copy72 = [self.reward_currency_amount copy];
    finalCopy.reward_currency_amount = copy72;
    
    shoppingCartAddressEntity *copy73 = [self.shipping_address copy];
    finalCopy.shipping_address = copy73;
    
    shoppingCartAddressEntity *copy74 = [self.billing_address copy];
    finalCopy.billing_address = copy74;
    
    NSMutableArray *cpy75 = [self.items copy];
    finalCopy.items = cpy75;
    
    shoppingCartPaymentEntity *copy76 = [self.payment copy];
    finalCopy.payment = copy76;
    
    return finalCopy;
}

@end
