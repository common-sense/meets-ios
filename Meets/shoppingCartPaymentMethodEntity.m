//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "shoppingCartPaymentMethodEntity.h" 


@implementation shoppingCartPaymentMethodEntity

- (id)initWithArray:(NSArray *)array
{
    self = [super init];
    if (self)
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"po_number"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setPo_number:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"method"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setMethod:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_cid"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_cid:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_owner"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_owner:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_number"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_number:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_type"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_type:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_exp_year"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_exp_year:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"cc_exp_month"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setCc_exp_month:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<shoppingCartPaymentMethodEntity>" ];
    if (self.po_number != nil)
    {
        [nsString appendFormat:@"<po_number>%@</po_number>" , [self po_number]];
    }
    if (self.method != nil)
    {
        [nsString appendFormat:@"<method>%@</method>" , [self method]];
    }
    if (self.cc_cid != nil)
    {
        [nsString appendFormat:@"<cc_cid>%@</cc_cid>" , [self cc_cid]];
    }
    if (self.cc_owner != nil)
    {
        [nsString appendFormat:@"<cc_owner>%@</cc_owner>" , [self cc_owner]];
    }
    if (self.cc_number != nil)
    {
        [nsString appendFormat:@"<cc_number>%@</cc_number>" , [self cc_number]];
    }
    if (self.cc_type != nil)
    {
        [nsString appendFormat:@"<cc_type>%@</cc_type>" , [self cc_type]];
    }
    if (self.cc_exp_year != nil)
    {
        [nsString appendFormat:@"<cc_exp_year>%@</cc_exp_year>" , [self cc_exp_year]];
    }
    if (self.cc_exp_month != nil)
    {
        [nsString appendFormat:@"<cc_exp_month>%@</cc_exp_month>" , [self cc_exp_month]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</shoppingCartPaymentMethodEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    if (self = [super init])
    {
        self.po_number = [decoder decodeObjectForKey:@"po_number"];
        self.method = [decoder decodeObjectForKey:@"method"];
        self.cc_cid = [decoder decodeObjectForKey:@"cc_cid"];
        self.cc_owner = [decoder decodeObjectForKey:@"cc_owner"];
        self.cc_number = [decoder decodeObjectForKey:@"cc_number"];
        self.cc_type = [decoder decodeObjectForKey:@"cc_type"];
        self.cc_exp_year = [decoder decodeObjectForKey:@"cc_exp_year"];
        self.cc_exp_month = [decoder decodeObjectForKey:@"cc_exp_month"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.po_number forKey:@"po_number"];
    [encoder encodeObject:self.method forKey:@"method"];
    [encoder encodeObject:self.cc_cid forKey:@"cc_cid"];
    [encoder encodeObject:self.cc_owner forKey:@"cc_owner"];
    [encoder encodeObject:self.cc_number forKey:@"cc_number"];
    [encoder encodeObject:self.cc_type forKey:@"cc_type"];
    [encoder encodeObject:self.cc_exp_year forKey:@"cc_exp_year"];
    [encoder encodeObject:self.cc_exp_month forKey:@"cc_exp_month"];
}


- (id)copyWithZone:(NSZone *)zone
{
    shoppingCartPaymentMethodEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.po_number copy];
    finalCopy.po_number = copy1;
    
    NSString *copy2 = [self.method copy];
    finalCopy.method = copy2;
    
    NSString *copy3 = [self.cc_cid copy];
    finalCopy.cc_cid = copy3;
    
    NSString *copy4 = [self.cc_owner copy];
    finalCopy.cc_owner = copy4;
    
    NSString *copy5 = [self.cc_number copy];
    finalCopy.cc_number = copy5;
    
    NSString *copy6 = [self.cc_type copy];
    finalCopy.cc_type = copy6;
    
    NSString *copy7 = [self.cc_exp_year copy];
    finalCopy.cc_exp_year = copy7;
    
    NSString *copy8 = [self.cc_exp_month copy];
    finalCopy.cc_exp_month = copy8;
    
    return finalCopy;
}

@end
