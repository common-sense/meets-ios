//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.5
// Date Of Creation: 11/5/2013 1:51:25 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "catalogInventoryStockItemEntity.h" 


@implementation catalogInventoryStockItemEntity

- (id)initWithArray:(NSArray *)array
{
    self = [super init];
    if (self)
    {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"product_id"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setProduct_id:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"sku"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setSku:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"qty"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setQty:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"is_in_stock"]==NSOrderedSame))
                {
                    NSString *nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setIs_in_stock:nodeContentValue];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}


- (NSString *)toString:(BOOL)addNameWrap
{
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<catalogInventoryStockItemEntity>" ];
    if (self.product_id != nil)
    {
        [nsString appendFormat:@"<product_id>%@</product_id>" , [self product_id]];
    }
    if (self.sku != nil)
    {
        [nsString appendFormat:@"<sku>%@</sku>" , [self sku]];
    }
    if (self.qty != nil)
    {
        [nsString appendFormat:@"<qty>%@</qty>" , [self qty]];
    }
    if (self.is_in_stock != nil)
    {
        [nsString appendFormat:@"<is_in_stock>%@</is_in_stock>" , [self is_in_stock]];
    }
    if (addNameWrap == YES)
        [nsString appendString:@"</catalogInventoryStockItemEntity>" ];
    return nsString;
}


#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)decoder
{
    self = [super init];
    if (self)
    {
        self.product_id = [decoder decodeObjectForKey:@"product_id"];
        self.sku = [decoder decodeObjectForKey:@"sku"];
        self.qty = [decoder decodeObjectForKey:@"qty"];
        self.is_in_stock = [decoder decodeObjectForKey:@"is_in_stock"];
    }
    return self;
}


- (void)encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeObject:self.product_id forKey:@"product_id"];
    [encoder encodeObject:self.sku forKey:@"sku"];
    [encoder encodeObject:self.qty forKey:@"qty"];
    [encoder encodeObject:self.is_in_stock forKey:@"is_in_stock"];
}


- (id)copyWithZone:(NSZone *)zone
{
    catalogInventoryStockItemEntity *finalCopy = [[[self class] allocWithZone:zone] init];
    
    NSString *copy1 = [self.product_id copy];
    finalCopy.product_id = copy1;
    
    NSString *copy2 = [self.sku copy];
    finalCopy.sku = copy2;
    
    NSString *copy3 = [self.qty copy];
    finalCopy.qty = copy3;
    
    NSString *copy4 = [self.is_in_stock copy];
    finalCopy.is_in_stock = copy4;
    
    return finalCopy;
}

@end
